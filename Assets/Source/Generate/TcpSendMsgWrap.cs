//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class TcpSendMsgWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(TcpSendMsg), typeof(MsgBase));
		L.RegFunction("ChangeMsgToLua", ChangeMsgToLua);
		L.RegFunction("New", _CreateTcpSendMsg);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("sendData", get_sendData, set_sendData);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateTcpSendMsg(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				TcpSendMsg obj = new TcpSendMsg();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 2)
			{
				ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 1);
				NetWorkMsg arg1 = (NetWorkMsg)ToLua.CheckObject<NetWorkMsg>(L, 2);
				TcpSendMsg obj = new TcpSendMsg(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: TcpSendMsg.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeMsgToLua(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			TcpSendMsg obj = (TcpSendMsg)ToLua.CheckObject<TcpSendMsg>(L, 1);
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			LuaByteBuffer arg1 = new LuaByteBuffer(ToLua.CheckByteBuffer(L, 3));
			ushort arg2 = (ushort)LuaDLL.luaL_checknumber(L, 4);
			obj.ChangeMsgToLua(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sendData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TcpSendMsg obj = (TcpSendMsg)o;
			NetWorkMsg ret = obj.sendData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sendData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sendData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TcpSendMsg obj = (TcpSendMsg)o;
			NetWorkMsg arg0 = (NetWorkMsg)ToLua.CheckObject<NetWorkMsg>(L, 2);
			obj.sendData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sendData on a nil value");
		}
	}
}

